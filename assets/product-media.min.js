!(function () {
  var e,
    t = {
      4558: function (e, t, i) {
        'use strict';
        i.d(t, {
          gM: function () {
            return o;
          },
        });
        var s = i(8971);
        i(9280);
        (window.MinimogEvents = window.MinimogEvents || new s.Z()),
          (window._ThemeEvent = window.MinimogEvents),
          (window.MinimogLibs.loadjs = __loadjs);
        window.MinimogEvents,
          window.MinimogTheme,
          window.MinimogSettings,
          window.MinimogStrings;
        const o = window.MinimogLibs || {};
      },
      9280: function () {
        __loadjs = (function () {
          var e = function () {},
            t = {},
            i = {},
            s = {};
          function o(e, t) {
            if (e) {
              var o = s[e];
              if (((i[e] = t), o))
                for (; o.length; ) o[0](e, t), o.splice(0, 1);
            }
          }
          function a(t, i) {
            t.call && (t = { success: t }),
              i.length ? (t.error || e)(i) : (t.success || e)(t);
          }
          function n(t, i, s, o) {
            var a,
              r,
              l = document,
              d = s.async,
              c = (s.numRetries || 0) + 1,
              u = s.before || e,
              h = t.replace(/[\?|#].*$/, ''),
              v = t.replace(/^(css|img)!/, '');
            (o = o || 0),
              /(^css!|\.css$)/.test(h)
                ? (((r = l.createElement('link')).rel = 'stylesheet'),
                  (r.href = v),
                  (a = 'hideFocus' in r) &&
                    r.relList &&
                    ((a = 0), (r.rel = 'preload'), (r.as = 'style')))
                : /(^img!|\.(png|gif|jpg|svg|webp)$)/.test(h)
                ? ((r = l.createElement('img')).src = v)
                : (((r = l.createElement('script')).src = t),
                  (r.async = void 0 === d || d)),
              !(r.onload =
                r.onerror =
                r.onbeforeload =
                  function (e) {
                    var l = e.type[0];
                    if (a)
                      try {
                        r.sheet.cssText.length || (l = 'e');
                      } catch (e) {
                        18 != e.code && (l = 'e');
                      }
                    if ('e' == l) {
                      if ((o += 1) < c) return n(t, i, s, o);
                    } else if ('preload' == r.rel && 'style' == r.as)
                      return (r.rel = 'stylesheet');
                    i(t, l, e.defaultPrevented);
                  }) !== u(t, r) && l.head.appendChild(r);
          }
          function r(e, i, s) {
            var r, l;
            if ((i && i.trim && (r = i), (l = (r ? s : i) || {}), r)) {
              if (r in t) throw 'LoadJS';
              t[r] = !0;
            }
            function d(t, i) {
              !(function (e, t, i) {
                var s,
                  o,
                  a = (e = e.push ? e : [e]).length,
                  r = a,
                  l = [];
                for (
                  s = function (e, i, s) {
                    if (('e' == i && l.push(e), 'b' == i)) {
                      if (!s) return;
                      l.push(e);
                    }
                    --a || t(l);
                  },
                    o = 0;
                  o < r;
                  o++
                )
                  n(e[o], s, i);
              })(
                e,
                function (e) {
                  a(l, e), t && a({ success: t, error: i }, e), o(r, e);
                },
                l
              );
            }
            if (l.returnPromise) return new Promise(d);
            d();
          }
          return (
            (r.ready = function (e, t) {
              return (
                (function (e, t) {
                  e = e.push ? e : [e];
                  var o,
                    a,
                    n,
                    r = [],
                    l = e.length,
                    d = l;
                  for (
                    o = function (e, i) {
                      i.length && r.push(e), --d || t(r);
                    };
                    l--;

                  )
                    (a = e[l]),
                      (n = i[a]) ? o(a, n) : (s[a] = s[a] || []).push(o);
                })(e, function (e) {
                  a(t, e);
                }),
                r
              );
            }),
            (r.done = function (e) {
              o(e, []);
            }),
            (r.reset = function () {
              (t = {}), (i = {}), (s = {});
            }),
            (r.isDefined = function (e) {
              return e in t;
            }),
            r
          );
        })();
      },
      8971: function (e, t, i) {
        'use strict';
        i.d(t, {
          Z: function () {
            return s;
          },
        });
        class s {
          constructor() {
            this.events = {};
          }
          get evts() {
            return Object.keys(this.events);
          }
          subscribe(e, t) {
            return (
              (this.events[e] = this.events[e] || []),
              this.events[e].push(t),
              () => this.unSubscribe(e, t)
            );
          }
          unSubscribe(e, t) {
            const i = this.events[e];
            if (i && Array.isArray(i))
              for (let e = 0; e < i.length; e++)
                if (i[e] === t) {
                  i.splice(e, 1);
                  break;
                }
          }
          emit(e) {
            for (
              var t = arguments.length, i = new Array(t > 1 ? t - 1 : 0), s = 1;
              s < t;
              s++
            )
              i[s - 1] = arguments[s];
            (this.events[e] || []).forEach((e) => {
              e(...i);
            });
          }
        }
      },
    },
    i = {};
  function s(e) {
    var o = i[e];
    if (void 0 !== o) return o.exports;
    var a = (i[e] = { exports: {} });
    return t[e](a, a.exports, s), a.exports;
  }
  (s.n = function (e) {
    var t =
      e && e.__esModule
        ? function () {
            return e.default;
          }
        : function () {
            return e;
          };
    return s.d(t, { a: t }), t;
  }),
    (s.d = function (e, t) {
      for (var i in t)
        s.o(t, i) &&
          !s.o(e, i) &&
          Object.defineProperty(e, i, { enumerable: !0, get: t[i] });
    }),
    (s.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }),
    (e = s(4558).gM),
    customElements.get('media-gallery') ||
      customElements.define(
        'media-gallery',
        class extends HTMLElement {
          constructor() {
            var e, t;
            super(),
              (this.selectors = {
                container: '.sf-product-wrapper',
                slider: '.swiper-container',
                sliderMobile: '.swiper-container.f-media-mobile',
                sliderPagination: '.swiper-pagination',
                sliderPrevEl: '.swiper-button-prev',
                sliderNextEl: '.swiper-button-next',
                navSlider: '.nav-swiper-container',
                medias: ['.sf-prod-media-item'],
                mediaWrapper: '.sf-prod-media__wrapper',
                mediaZoomIns: ['.sf-prod-media__zoom-in'],
                navSliderMobile: '.nav-swiper-container-mobile',
                videos: ['.media-video'],
                productBlock: '.sf-prod__block',
                mediaMobile: '.sf-product-media__mobile',
                variantIdNode: '[name="id"]',
              }),
              (this.container = this.closest(this.selectors.container)),
              (this.domNodes = queryDomNodes(this.selectors, this)),
              (this.enableVideoAutoplay =
                'true' === this.dataset.enableVideoAutoplay),
              (this.enableImageZoom = 'true' === this.dataset.enableImageZoom),
              (this.enableVariantGroupImages =
                'true' === this.dataset.enableVariantGroupImages),
              (this.view =
                (null === (e = this.closest('.sf-prod__block')) ||
                void 0 === e ||
                null === (t = e.dataset) ||
                void 0 === t
                  ? void 0
                  : t.view) || 'product-template'),
              (this.section = this.closest(
                `[data-section-id="${this.sectionId}"]`
              )),
              (this.layout = this.dataset.layout),
              this.setupData();
          }
          async init() {
            switch (this.view) {
              case 'product-template':
                await this.initSlider(),
                  this.enableVariantGroupImages ||
                    (this.addEventToMainMedias(), this.initLightbox()),
                  'slider' !== this.mediaMode && (this.mediaMode = 'gallery');
                break;
              case 'featured-product':
                this.initSlider();
                break;
              case 'card':
              case 'sticky-atc':
                this.mediaMode = 'featured-image';
                break;
              case 'quick-view':
                (this.mediaMode = 'featured-image'), this.initSlider();
            }
          }
          getProductJson(e) {
            return fetch(e + '.js').then(function (e) {
              return e.json();
            });
          }
          async setupData() {
            (this.productHandle = this.dataset.productHandle),
              (this.productUrl = this.dataset.productUrl),
              (this.productData = await this.getProductJson(this.productUrl));
            const { productData: e, productData: { variants: t } = {} } = this,
              i = this.container.querySelector(this.selectors.variantIdNode);
            if (e && i) {
              let o = Number(i.value);
              var s;
              o ||
                (o =
                  null === (s = e.selected_or_first_available_variant) ||
                  void 0 === s
                    ? void 0
                    : s.id);
              const a = t.find((e) => e.id === o) || t[0];
              (this.productData.initialVariant = a),
                !this.productData.selected_variant &&
                  i.dataset.selectedVariant &&
                  (this.productData.selected_variant = t.find(
                    (e) => e.id === Number(i.dataset.selectedVariant)
                  ));
            }
            this.init();
          }
          initSlider() {
            var t;
            null != this &&
              null !== (t = this.domNodes) &&
              void 0 !== t &&
              t.slider &&
              ((this.mediaMode = 'slider'),
              loadAssets(['swiper.css', 'swiper.js'])
                .then(() => {
                  const {
                    domNodes: {
                      slider: t,
                      sliderPagination: i,
                      navSlider: s,
                      sliderNextEl: o,
                      sliderPrevEl: a,
                    },
                  } = this;
                  let n = 0,
                    r = {},
                    l = {};
                  var d;
                  this.productData.initialVariant &&
                    this.productData.selected_variant &&
                    (n =
                      (null ===
                        (d = this.productData.initialVariant.featured_media) ||
                      void 0 === d
                        ? void 0
                        : d.position) - 1 || 0),
                    (r = this.enableVariantGroupImages
                      ? {
                          initialSlide: n,
                          slidesPerView: 5,
                          freeMode: !0,
                          spaceBetween: 10,
                          loop: !1,
                          threshold: 2,
                          watchSlidesVisibility: !0,
                          watchSlidesProgress: !0,
                          direction:
                            'layout-6' === this.layout
                              ? 'vertical'
                              : 'horizontal',
                          on: { init: () => (s.style.opacity = 1) },
                        }
                      : {
                          initialSlide: n,
                          slidesPerView: 5,
                          freeMode: !0,
                          spaceBetween: 10,
                          threshold: 2,
                          watchSlidesVisibility: !0,
                          watchSlidesProgress: !0,
                          direction:
                            'layout-6' === this.layout
                              ? 'vertical'
                              : 'horizontal',
                          on: { init: () => (s.style.opacity = 1) },
                        }),
                    (this.navSlider = s ? new e.Swiper(s, r) : null);
                  const c = this.navSlider
                    ? { thumbs: { swiper: this.navSlider } }
                    : {};
                  l = this.enableVariantGroupImages
                    ? Object.assign({}, getProductSliderConfig(this.layout), {
                        initialSlide: n,
                        autoHeight: !0,
                        navigation: { nextEl: o, prevEl: a },
                        threshold: 2,
                        loop: !1,
                        pagination: { el: i, clickable: !0, type: 'bullets' },
                        ...c,
                        on: {
                          init: () => {
                            (t.style.opacity = 1),
                              (this.domNodes = queryDomNodes(
                                this.selectors,
                                this.container
                              ));
                          },
                        },
                      })
                    : Object.assign({}, getProductSliderConfig(this.layout), {
                        initialSlide: n,
                        autoHeight: !0,
                        navigation: { nextEl: o, prevEl: a },
                        threshold: 2,
                        pagination: { el: i, clickable: !0, type: 'bullets' },
                        ...c,
                        on: {
                          init: () => {
                            (t.style.opacity = 1),
                              (this.domNodes = queryDomNodes(
                                this.selectors,
                                this.container
                              ));
                          },
                        },
                      });
                  const u = window.matchMedia('(max-width: 767px)');
                  'product-template' === this.view
                    ? u.matches
                      ? 'mobile' === this.dataset.screen &&
                        (this.slider = new e.Swiper(t, l))
                      : 'desktop' === this.dataset.screen &&
                        (this.slider = new e.Swiper(t, l))
                    : (this.slider = new e.Swiper(t, l)),
                    this.enableVariantGroupImages || this.handleSlideChange();
                })
                .catch((e) => {}));
          }
          handleSlideChange() {
            if (!this.slider) return;
            let e = !0,
              t = '',
              i = [];
            const { previewWrapper: s } = this.domNodes;
            this.slider.on('slideChange', (o) => {
              try {
                const { slides: n, activeIndex: r } = o;
                if (s) {
                  const e = n[r].dataset.aspectRatio || 1,
                    t =
                      'layout-5' ===
                      ('product-template' === this.view
                        ? this.layout
                        : this.view)
                        ? 2
                        : 1;
                  s.style.setProperty('--aspect-ratio', e * t);
                }
                this.playActiveMedia(n[r]),
                  (i = [r]),
                  ('layout-5' !== this.layout && 'layout-7' !== this.layout) ||
                    i.push(r + 1);
                for (let e of i) {
                  var a;
                  const i = n[e];
                  if (
                    ((t =
                      null == i || null === (a = i.dataset) || void 0 === a
                        ? void 0
                        : a.mediaType),
                    'model' === t)
                  )
                    break;
                }
                'model' === t
                  ? ((this.slider.allowTouchMove = !1), (e = !1))
                  : (e || (this.slider.allowTouchMove = !0), (e = !0));
              } catch (e) {}
            });
          }
          playActiveMedia(e) {
            window.pauseAllMedia();
            const t = null == e ? void 0 : e.querySelector('.deferred-media'),
              i = 'true' === (null == t ? void 0 : t.dataset.autoPlay);
            t && i && t.loadContent(!1);
          }
          initLightbox() {
            var t;
            let i =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : null == this ||
                  null === (t = this.productData) ||
                  void 0 === t
                ? void 0
                : t.media;
            this.enableImageZoom &&
              loadAssets(['glightbox.css', 'glightbox.js'])
                .then(() => {
                  const t =
                    null == i
                      ? void 0
                      : i.map((e) => {
                          if ('image' === e.media_type)
                            return {
                              href: e.src,
                              type: 'image',
                              id_media: e.id,
                            };
                          if ('external_video' === e.media_type)
                            return {
                              href: getVideoURL(e.external_id, e.host),
                              type: 'video',
                              source: e.host,
                              id_media: e.id,
                            };
                          var t, i;
                          if ('video' === e.media_type)
                            return {
                              href:
                                null == e ||
                                null === (t = e.sources) ||
                                void 0 === t ||
                                null === (i = t[0]) ||
                                void 0 === i
                                  ? void 0
                                  : i.url,
                              type: 'video',
                            };
                          if ('model' === e.media_type) {
                            var s;
                            const t =
                              null ===
                                (s = document.querySelector(
                                  `.media-model[data-media-id="${e.id}"]`
                                )) || void 0 === s
                                ? void 0
                                : s.cloneNode(!0);
                            return (
                              t.classList.remove('hidden'),
                              t.classList.add('model-in-lightbox'),
                              {
                                content: t,
                                width: '80vw',
                                height: '70vh',
                                id_media: e.id,
                              }
                            );
                          }
                        });
                  this.lightbox = new e.GLightbox({
                    elements: t,
                    openEffect: 'fade',
                    closeEffect: 'fade',
                    draggable: !1,
                    autofocusVideos: !0,
                  });
                })
                .catch((e) => {});
          }
          addEventToMainMedias() {
            addEventDelegate({
              selector: this.selectors.medias[0],
              context: this,
              handler: (e, t) => {
                var i;
                const s = t.classList.contains('media-type-image'),
                  o =
                    null == e || null === (i = e.target) || void 0 === i
                      ? void 0
                      : i.closest(this.selectors.mediaZoomIns[0]);
                if (s || o) {
                  var a, n;
                  const e =
                    Number(
                      null == t || null === (a = t.dataset) || void 0 === a
                        ? void 0
                        : a.index
                    ) || 0;
                  null == this ||
                    null === (n = this.lightbox) ||
                    void 0 === n ||
                    n.openAt(e);
                }
              },
            });
          }
          setActiveMedia(e) {
            if (e)
              if ('slider' === this.mediaMode) {
                if (e.featured_media) {
                  var t, i;
                  const a =
                    (null == e ||
                    null === (t = e.featured_media) ||
                    void 0 === t
                      ? void 0
                      : t.position) || 0;
                  var s, o;
                  this.slider &&
                    null !== (i = this.slider) &&
                    void 0 !== i &&
                    i.wrapperEl &&
                    (null == this ||
                      null === (s = this.slider) ||
                      void 0 === s ||
                      null === (o = s.slideToLoop) ||
                      void 0 === o ||
                      o.call(s, a - 1));
                }
              } else if ('featured-image' === this.mediaMode) {
                var a;
                const t =
                    null == e || null === (a = e.featured_image) || void 0 === a
                      ? void 0
                      : a.src,
                  { featuredImage: i } = this.domNodes,
                  s = null == i ? void 0 : i.querySelector('img');
                if (s && t) {
                  var n, r, l, d;
                  (s.src = t), s.removeAttribute('srcset');
                  const o =
                    (null === (n = this.productData) ||
                    void 0 === n ||
                    null === (r = n.initialVariant) ||
                    void 0 === r
                      ? void 0
                      : r.id) === (null == e ? void 0 : e.id)
                      ? 'add'
                      : 'remove';
                  null == i ||
                    null === (l = i.classList) ||
                    void 0 === l ||
                    null === (d = l[o]) ||
                    void 0 === d ||
                    d.call(l, 'group-hover:opacity-0');
                }
              } else {
                const t =
                  null == this
                    ? void 0
                    : this.querySelector(
                        `[data-media-id="${e.featured_media.id}"]`
                      );
                t && this.scrollIntoView(t);
              }
          }
          scrollIntoView(e) {
            e.scrollIntoView({ behavior: 'smooth' });
          }
        }
      );
})();
